#usda 1.0
(
    defaultPrim = "Cube"
    metersPerUnit = 0.01
    upAxis = "Y"
)

def Xform "Cube" (
    kind = "component"
)
{
    def Mesh "pCube1" (
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        uniform bool doubleSided = 1
        float3[] extent = [(-1.5, -1.5, -1.5), (1.5, 1.5, 1.5)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [0, 1, 2, 2, 1, 3, 2, 3, 4, 4, 3, 5, 4, 5, 6, 6, 5, 7, 6, 7, 0, 0, 7, 1, 1, 7, 3, 3, 7, 5, 6, 0, 4, 4, 0, 2]
        rel material:binding = </Cube/mtl/lambert2SG>
        point3f[] points = [(-1.5, -1.5, 1.5), (1.5, -1.5, 1.5), (-1.5, 1.5, 1.5), (1.5, 1.5, 1.5), (-1.5, 1.5, -1.5), (1.5, 1.5, -1.5), (-1.5, -1.5, -1.5), (1.5, -1.5, -1.5)]
        texCoord2f[] primvars:st = [(0.9969529, -0.007914156), (0.99837995, -0.0023981929), (0.0022025704, -0.0025481582), (0.0011246204, 0.98644924), (-0.005244434, -0.00049364567), (0.9977974, 0.9930467), (0.0015641153, 0.0077290535), (0.9950106, 0.9997612), (0.0015641153, 0.9808558), (0.9933599, 0.9808558), (0.9871764, 0.00039732456), (0.9871764, 0.98644924), (0.009629011, -0.007914156), (0.009629011, 0.9794097), (0.9933599, 0.0077290535), (-0.005244434, 0.9997612), (0.0011246204, 0.00039732456), (0.99837995, 0.9943617), (0.9950106, -0.00049364567), (0.0022025704, 0.9930467), (0.0016200542, -0.0023981929), (0.9969529, 0.9794097), (0.9977974, -0.0025481582), (0.0016200542, 0.9943617)] (
            customData = {
                dictionary Maya = {
                    token name = "map1"
                }
            }
            interpolation = "faceVarying"
        )
        int[] primvars:st:indices = [20, 1, 23, 23, 1, 17, 2, 22, 19, 19, 22, 5, 4, 18, 15, 15, 18, 7, 6, 14, 8, 8, 14, 9, 16, 10, 3, 3, 10, 11, 12, 0, 13, 13, 0, 21]
        float3 xformOp:rotateXYZ = (-718.559, 345.46106, 0.12904848)
        double3 xformOp:translate = (-0.579286437898852, 1.8761005980787469, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]

        def GeomSubset "back"
        {
            uniform token elementType = "face"
            uniform token familyName = "componentTag"
            int[] indices = [4, 5]
        }

        def GeomSubset "bottom"
        {
            uniform token elementType = "face"
            uniform token familyName = "componentTag"
            int[] indices = [6, 7]
        }

        def GeomSubset "front"
        {
            uniform token elementType = "face"
            uniform token familyName = "componentTag"
            int[] indices = [0, 1]
        }

        def GeomSubset "left"
        {
            uniform token elementType = "face"
            uniform token familyName = "componentTag"
            int[] indices = [10, 11]
        }

        def GeomSubset "right"
        {
            uniform token elementType = "face"
            uniform token familyName = "componentTag"
            int[] indices = [8, 9]
        }

        def GeomSubset "top"
        {
            uniform token elementType = "face"
            uniform token familyName = "componentTag"
            int[] indices = [2, 3]
        }
    }

    def Scope "mtl"
    {
        def Material "lambert2SG"
        {
            string inputs:face:varname = "st"
            token outputs:surface.connect = </Cube/mtl/lambert2SG/lambert2.outputs:surface>

            def Shader "lambert2"
            {
                uniform token info:id = "UsdPreviewSurface"
                color3f inputs:diffuseColor.connect = </Cube/mtl/lambert2SG/face.outputs:rgb>
                normal3f inputs:normal = (1, 1, 1)
                float inputs:roughness = 1
                int inputs:useSpecularWorkflow = 1
                token outputs:displacement
                token outputs:surface
            }

            def Shader "face"
            {
                uniform token info:id = "UsdUVTexture"
                float4 inputs:fallback = (0.5, 0.5, 0.5, 1)
                asset inputs:file = @Cube.png@ (
                    colorSpace = "sRGB"
                )
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </Cube/mtl/lambert2SG/place2dTexture1.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "place2dTexture1"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                string inputs:varname.connect = </Cube/mtl/lambert2SG.inputs:face:varname>
                float2 outputs:result
            }
        }
    }
}

